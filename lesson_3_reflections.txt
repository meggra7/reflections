When would you want to use a remote repository rather than keeping all your work local?

A remote repository would be helpful if you are working on a project with others working on separate computers, or if
you will be working from different locations such as a work computer, home computer, and/or laptop.


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your
remote repository?

If you are working on a feature independently, you will likely only want to push and/or pull commits once you are
satisfied with your work.  If you pull commits from others before you are done you may pull code that you aren't
ready to compile with yours.  In the same manner you most likely won't want to push commits for your work until they
are at a workable state.


Describe the differences between forks, clones, and branches. When would you use one instead of another?

A fork is a copy of a repository specifically made on GitHub.  You would fork a repository when you want to work on
another person's repository that you found online without actually contributing to their repository directly.  A
clone is a copy of a repository either made completely offline on your computer, or between your computer and GitHub.
You would clone a repository when you want to work on and contribute to a repository directly.  Finally, a branch is
a new line of commits that is created within a single repository.  You would create a branch with a repository to
work on a new feature or experimental idea, but not necessarily with the intent to share or copy the repository to
GitHub or another computer.


What is the benefit of having a copy of the last known state of the remote stored locally?

This is helpful in that it allows you to work on changes with the remote branch without having to be online.  This
allows you to work on a more up-to-date version of the file(s) before attempting to push/merge your changes later on.


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without Git or GitHub, the only other way I could think of to collaborate would be to manually assign tasks to a
single individual and have someone manually review the changes later.  Or, if multiple people needed to work on a
single feature it may even be necessary to work simultaneously at the same computer or workstation to ensure that
they do not interfere with each other's work.  This may be easier in that you would only focus on one person's
changes at a time, and you wouldn't run into merge conflicts, for example.  However, this would be harder in that in
could be less productive.  You would have to limit the people working on certain features at a single time, or if you
had multiple people work on a feature at the same computer they could really only make single changes at a time
instead of working independently on multiple changes.